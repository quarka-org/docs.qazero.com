"use strict";(self.webpackChunktemp=self.webpackChunktemp||[]).push([[2704],{5333:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"developer-manual/api/2025-10-20/qal-validation-2025-10-20","title":"QAL Validation Manifest","description":"Defines strict validation rules for QAL JSON execution requests. This frontmatter is parsed by QAL_Executor (PHP yaml_parse_file) for runtime validation.\\n","source":"@site/docs/developer-manual/api/2025-10-20/qal-validation.md","sourceDirName":"developer-manual/api/2025-10-20","slug":"/developer-manual/api/2025-10-20/qal-validation-2025-10-20","permalink":"/ja/docs/developer-manual/api/2025-10-20/qal-validation-2025-10-20","draft":false,"unlisted":false,"editUrl":"https://github.com/quarka-org/docs.qazero.com/edit/main/docs/developer-manual/api/2025-10-20/qal-validation.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"qal-validation-2025-10-20","title":"QAL Validation Manifest","sidebar_position":4,"version":"2025-10-20","update":"2025-10-20","type":"validation_manifest","description":"Defines strict validation rules for QAL JSON execution requests. This frontmatter is parsed by QAL_Executor (PHP yaml_parse_file) for runtime validation.\\n","structure":{"required":["tracking_id","materials","time","make","result"]},"rules":{"tracking_id":{"type":"string","description":"Unique identifier for the tracking site to query. Must match a tracking_id from the /guide endpoint response.","pattern":"^[a-zA-Z0-9_-]+$","errors":[{"code":"E_UNKNOWN_TRACKING_ID","message":"Invalid tracking_id provided."}]},"materials":{"type":"array","description":"List of data sources (materials) to use in the query. Each material must have a \'name\' property.","items":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Material name. Only \'allpv\' (page view data) and \'gsc\' (Google Search Console data) are allowed.","enum":["allpv","gsc"]}},"additionalProperties":false},"minItems":1,"errors":[{"code":"E_UNKNOWN_MATERIAL","message":"Material name not found in manifest."}]},"time":{"type":"object","required":["start","end","tz"],"properties":{"start":{"type":"string","format":"date-time"},"end":{"type":"string","format":"date-time"},"tz":{"type":"string","description":"IANA timezone identifier (e.g., Asia/Tokyo, UTC, America/New_York). Any valid IANA timezone is accepted.","examples":["Asia/Tokyo","UTC","Europe/London","America/New_York","America/Los_Angeles","Europe/Paris"]}},"errors":[{"code":"E_TIME_REQUIRED","message":"Missing time.start, time.end, or time.tz."}]},"make":{"type":"object","description":"Defines views (data transformations) to create from materials. Each key is a view name, and the value defines the view\'s structure.","patternProperties":{"^[a-zA-Z0-9_]+$":{"type":"object","description":"View definition. Must specify \'from\' (source material) and \'keep\' (columns to select).","required":["from","keep"],"properties":{"from":{"type":"array","description":"Specify which material to use. Must contain exactly one material name.","items":{"type":"string","enum":["allpv","gsc"]},"minItems":1,"maxItems":1},"keep":{"type":"array","description":"List of columns to include in the result. Must use fully qualified names in the format \'material.column_name\' (e.g., \'allpv.url\', \'gsc.keyword\').","items":{"type":"string","pattern":"^(allpv|gsc)\\\\.[a-zA-Z0-9_]+$"},"minItems":1}},"additionalProperties":false}},"errors":[{"code":"E_UNKNOWN_COLUMN","message":"Invalid column name in keep list."}]},"result":{"type":"object","description":"Specifies which view to return and how to format the result.","required":["use"],"properties":{"use":{"type":"string","description":"Name of the view (defined in \'make\') to return as the result."},"limit":{"type":"integer","description":"Maximum number of rows to return. Default: 1000, Maximum: 50000.","minimum":1,"maximum":50000,"default":1000},"count_only":{"type":"boolean","description":"If true, return only the count of rows instead of the actual data. Default: false.","default":false}},"additionalProperties":false,"errors":[{"code":"E_UNKNOWN_VIEW","message":"Result.use does not match any defined view in make."}]}},"features":{"filter":false,"join":false,"calc":false,"sort":false}},"sidebar":"developerManualSidebar","previous":{"title":"QAL Guide","permalink":"/ja/docs/developer-manual/api/2025-10-20/qal-2025-10-20"},"next":{"title":"Materials Reference","permalink":"/ja/docs/developer-manual/api/2025-10-20/materials-2025-10-20"}}');var r=i(4848),a=i(8453);const t={id:"qal-validation-2025-10-20",title:"QAL Validation Manifest",sidebar_position:4,version:"2025-10-20",update:"2025-10-20",type:"validation_manifest",description:"Defines strict validation rules for QAL JSON execution requests. This frontmatter is parsed by QAL_Executor (PHP yaml_parse_file) for runtime validation.\n",structure:{required:["tracking_id","materials","time","make","result"]},rules:{tracking_id:{type:"string",description:"Unique identifier for the tracking site to query. Must match a tracking_id from the /guide endpoint response.",pattern:"^[a-zA-Z0-9_-]+$",errors:[{code:"E_UNKNOWN_TRACKING_ID",message:"Invalid tracking_id provided."}]},materials:{type:"array",description:"List of data sources (materials) to use in the query. Each material must have a 'name' property.",items:{type:"object",required:["name"],properties:{name:{type:"string",description:"Material name. Only 'allpv' (page view data) and 'gsc' (Google Search Console data) are allowed.",enum:["allpv","gsc"]}},additionalProperties:!1},minItems:1,errors:[{code:"E_UNKNOWN_MATERIAL",message:"Material name not found in manifest."}]},time:{type:"object",required:["start","end","tz"],properties:{start:{type:"string",format:"date-time"},end:{type:"string",format:"date-time"},tz:{type:"string",description:"IANA timezone identifier (e.g., Asia/Tokyo, UTC, America/New_York). Any valid IANA timezone is accepted.",examples:["Asia/Tokyo","UTC","Europe/London","America/New_York","America/Los_Angeles","Europe/Paris"]}},errors:[{code:"E_TIME_REQUIRED",message:"Missing time.start, time.end, or time.tz."}]},make:{type:"object",description:"Defines views (data transformations) to create from materials. Each key is a view name, and the value defines the view's structure.",patternProperties:{"^[a-zA-Z0-9_]+$":{type:"object",description:"View definition. Must specify 'from' (source material) and 'keep' (columns to select).",required:["from","keep"],properties:{from:{type:"array",description:"Specify which material to use. Must contain exactly one material name.",items:{type:"string",enum:["allpv","gsc"]},minItems:1,maxItems:1},keep:{type:"array",description:"List of columns to include in the result. Must use fully qualified names in the format 'material.column_name' (e.g., 'allpv.url', 'gsc.keyword').",items:{type:"string",pattern:"^(allpv|gsc).[a-zA-Z0-9_]+$"},minItems:1}},additionalProperties:!1}},errors:[{code:"E_UNKNOWN_COLUMN",message:"Invalid column name in keep list."}]},result:{type:"object",description:"Specifies which view to return and how to format the result.",required:["use"],properties:{use:{type:"string",description:"Name of the view (defined in 'make') to return as the result."},limit:{type:"integer",description:"Maximum number of rows to return. Default: 1000, Maximum: 50000.",minimum:1,maximum:5e4,default:1e3},count_only:{type:"boolean",description:"If true, return only the count of rows instead of the actual data. Default: false.",default:!1}},additionalProperties:!1,errors:[{code:"E_UNKNOWN_VIEW",message:"Result.use does not match any defined view in make."}]}},features:{filter:!1,join:!1,calc:!1,sort:!1}},l="QAL Validation Manifest \u2014 AI Accessible Version",d={},o=[{value:"Overview",id:"overview",level:2},{value:"Validation Manifest (AI-Readable Copy)",id:"validation-manifest-ai-readable-copy",level:2},{value:"How to Use",id:"how-to-use",level:2},{value:"For AI Models (ChatGPT, Claude, MCP)",id:"for-ai-models-chatgpt-claude-mcp",level:3},{value:"For QAL Executor (PHP)",id:"for-qal-executor-php",level:3},{value:"For Human Documentation (Docusaurus)",id:"for-human-documentation-docusaurus",level:3},{value:"Validation Rules Details",id:"validation-rules-details",level:2},{value:"1. tracking_id",id:"1-tracking_id",level:3},{value:"2. materials",id:"2-materials",level:3},{value:"3. time",id:"3-time",level:3},{value:"4. make",id:"4-make",level:3},{value:"5. result",id:"5-result",level:3},{value:"Error Codes Reference",id:"error-codes-reference",level:2},{value:"Design Principles",id:"design-principles",level:2},{value:"1. Single Source of Truth",id:"1-single-source-of-truth",level:3},{value:"2. Frictionless Versioning",id:"2-frictionless-versioning",level:3},{value:"3. Double YAML Format",id:"3-double-yaml-format",level:3},{value:"4. AI-Friendly Structure",id:"4-ai-friendly-structure",level:3},{value:"PHP Integration Example",id:"php-integration-example",level:2},{value:"Method 1: Parse Frontmatter Only",id:"method-1-parse-frontmatter-only",level:3},{value:"Method 2: Parse Body YAML Block",id:"method-2-parse-body-yaml-block",level:3},{value:"Validation Function",id:"validation-function",level:3},{value:"Complete Validation Example",id:"complete-validation-example",level:2},{value:"Valid QAL JSON",id:"valid-qal-json",level:3},{value:"Invalid QAL JSON",id:"invalid-qal-json",level:3},{value:"Future Extensions",id:"future-extensions",level:2},{value:"Related Documentation",id:"related-documentation",level:2},{value:"Why This Format?",id:"why-this-format",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"qal-validation-manifest--ai-accessible-version",children:"QAL Validation Manifest \u2014 AI Accessible Version"})}),"\n",(0,r.jsxs)(n.p,{children:["This document defines ",(0,r.jsx)(n.strong,{children:"the exact schema that every QAL JSON must follow"}),".\nThe YAML frontmatter section is used by the PHP executor for validation. The body below duplicates this information for AI models and other tools reading via HTTP."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose:"})," Single source of truth for QAL validation rules\n",(0,r.jsx)(n.strong,{children:"Version:"})," 2025-10-20\n",(0,r.jsx)(n.strong,{children:"Type:"})," validation_manifest\n",(0,r.jsx)(n.strong,{children:"Audience:"})," QAL Executor (PHP), AI Models (ChatGPT, Claude, MCP), Human Documentation"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"validation-manifest-ai-readable-copy",children:"Validation Manifest (AI-Readable Copy)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'id: qal-validation-2025-10-20\ntitle: QAL Validation Manifest (for Executor and AI)\nversion: "2025-10-20"\nupdate: "2025-10-20"\ntype: validation_manifest\ndescription: >\n  Defines strict validation rules for QAL JSON execution requests.\n  Used for validating QAL structures before execution.\n\nstructure:\n  required: ["tracking_id", "materials", "time", "make", "result"]\n\nrules:\n  tracking_id:\n    type: string\n    description: "Unique identifier for the tracking site to query. Must match a tracking_id from the /guide endpoint response."\n    pattern: "^[a-zA-Z0-9_-]+$"\n    errors:\n      - code: E_UNKNOWN_TRACKING_ID\n        message: "Invalid tracking_id provided."\n\n  materials:\n    type: array\n    description: "List of data sources (materials) to use in the query. Each material must have a \'name\' property."\n    items:\n      type: object\n      required: ["name"]\n      properties:\n        name:\n          type: string\n          description: "Material name. Only \'allpv\' (page view data) and \'gsc\' (Google Search Console data) are allowed."\n          enum: ["allpv", "gsc"]\n      additionalProperties: false\n    minItems: 1\n    errors:\n      - code: E_UNKNOWN_MATERIAL\n        message: "Material name not found in manifest."\n\n  time:\n    type: object\n    required: ["start", "end", "tz"]\n    properties:\n      start: { type: string, format: date-time }\n      end: { type: string, format: date-time }\n      tz:\n        type: string\n        description: "IANA timezone identifier (e.g., Asia/Tokyo, UTC, America/New_York). Any valid IANA timezone is accepted."\n        examples: ["Asia/Tokyo", "UTC", "Europe/London", "America/New_York", "America/Los_Angeles", "Europe/Paris"]\n    errors:\n      - code: E_TIME_REQUIRED\n        message: "Missing time.start, time.end, or time.tz."\n\n  make:\n    type: object\n    description: "Defines views (data transformations) to create from materials. Each key is a view name, and the value defines the view\'s structure."\n    patternProperties:\n      "^[a-zA-Z0-9_]+$":\n        type: object\n        description: "View definition. Must specify \'from\' (source material) and \'keep\' (columns to select)."\n        required: ["from", "keep"]\n        properties:\n          from:\n            type: array\n            description: "Specify which material to use. Must contain exactly one material name."\n            items: { type: string, enum: ["allpv", "gsc"] }\n            minItems: 1\n            maxItems: 1\n          keep:\n            type: array\n            description: "List of columns to include in the result. Must use fully qualified names in the format \'material.column_name\' (e.g., \'allpv.url\', \'gsc.keyword\')."\n            items:\n              type: string\n              pattern: "^(allpv|gsc)\\\\.[a-zA-Z0-9_]+$"\n            minItems: 1\n        additionalProperties: false\n    errors:\n      - code: E_UNKNOWN_COLUMN\n        message: "Invalid column name in keep list."\n\n  result:\n    type: object\n    description: "Specifies which view to return and how to format the result."\n    required: ["use"]\n    properties:\n      use:\n        type: string\n        description: "Name of the view (defined in \'make\') to return as the result."\n      limit:\n        type: integer\n        description: "Maximum number of rows to return. Default: 1000, Maximum: 50000."\n        minimum: 1\n        maximum: 50000\n        default: 1000\n      count_only:\n        type: boolean\n        description: "If true, return only the count of rows instead of the actual data. Default: false."\n        default: false\n    additionalProperties: false\n    errors:\n      - code: E_UNKNOWN_VIEW\n        message: "Result.use does not match any defined view in make."\n\nfeatures:\n  filter: false\n  join: false\n  calc: false\n  sort: false\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"how-to-use",children:"How to Use"}),"\n",(0,r.jsx)(n.h3,{id:"for-ai-models-chatgpt-claude-mcp",children:"For AI Models (ChatGPT, Claude, MCP)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"You are a QAL Generator."})}),"\n",(0,r.jsx)(n.p,{children:"Your task is to produce valid QAL JSON objects that conform to this schema:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Always include these required sections:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tracking_id"})," - string matching ",(0,r.jsx)(n.code,{children:"^[a-zA-Z0-9_-]+$"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"materials"})," - array with at least one material (",(0,r.jsx)(n.code,{children:"allpv"})," or ",(0,r.jsx)(n.code,{children:"gsc"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"time"})," - object with ",(0,r.jsx)(n.code,{children:"start"}),", ",(0,r.jsx)(n.code,{children:"end"}),", and ",(0,r.jsx)(n.code,{children:"tz"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"make"})," - object with at least one view definition"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"result"})," - object with ",(0,r.jsx)(n.code,{children:"use"})," (required), optional ",(0,r.jsx)(n.code,{children:"limit"})," and ",(0,r.jsx)(n.code,{children:"count_only"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Follow these rules:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Only use materials: ",(0,r.jsx)(n.code,{children:"allpv"}),", ",(0,r.jsx)(n.code,{children:"gsc"})," (strictly limited)"]}),"\n",(0,r.jsxs)(n.li,{children:["Use any valid IANA timezone (examples: ",(0,r.jsx)(n.code,{children:"Asia/Tokyo"}),", ",(0,r.jsx)(n.code,{children:"UTC"}),", ",(0,r.jsx)(n.code,{children:"Europe/London"}),", ",(0,r.jsx)(n.code,{children:"America/New_York"}),", ",(0,r.jsx)(n.code,{children:"America/Los_Angeles"}),", ",(0,r.jsx)(n.code,{children:"Europe/Paris"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Column names must be fully qualified: ",(0,r.jsx)(n.code,{children:"material.column"})]}),"\n",(0,r.jsxs)(n.li,{children:["Each view in ",(0,r.jsx)(n.code,{children:"make"})," must have exactly ONE item in ",(0,r.jsx)(n.code,{children:"from"})," array"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"result.use"})," must reference a view name defined in ",(0,r.jsx)(n.code,{children:"make"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"result.limit"})," must be 1-50000 (default: 1000)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Do NOT use these features (disabled in this version):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filter"})," - Not supported"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"join"})," - Not supported"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"calc"})," - Not supported"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sort"})," - Not supported"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"for-qal-executor-php",children:"For QAL Executor (PHP)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Runtime Validation:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"<?php\n// Load validation manifest\n$manifest = yaml_parse_file('/path/to/qal-validation.md');\n\n// Validate QAL JSON\n$result = QAL_Executor::qal_validate_by_manifest($qal_json, $manifest);\n\nif (!$result['valid']) {\n    // Return validation errors\n    return [\n        'success' => false,\n        'errors' => $result['errors']\n    ];\n}\n\n// Proceed with execution\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Validation Steps:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Structure validation"})," - Check all required top-level keys exist"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"tracking_id validation"})," - Verify format and existence"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"materials validation"})," - Check material names are valid"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"time validation"})," - Validate datetime format and timezone"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"make validation"})," - Verify view structure, from, and keep rules"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"result validation"})," - Check use references valid view, limit is in range"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Feature check"})," - Reject any disabled features (filter, join, calc, sort)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"for-human-documentation-docusaurus",children:"For Human Documentation (Docusaurus)"}),"\n",(0,r.jsx)(n.p,{children:"This page is rendered as part of the API documentation. The YAML frontmatter is parsed by Docusaurus, and this markdown body provides human-readable guidance."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Navigation:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/ja/docs/developer-manual/api/2025-10-20/qal-2025-10-20",children:"QAL Guide"})," - Learn how to write QAL queries"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/ja/docs/developer-manual/api/2025-10-20/materials-2025-10-20",children:"Materials Reference"})," - See available columns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/ja/docs/developer-manual/api/2025-10-20/endpoints-2025-10-20",children:"Endpoints"})," - API endpoint details"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"validation-rules-details",children:"Validation Rules Details"}),"\n",(0,r.jsx)(n.h3,{id:"1-tracking_id",children:"1. tracking_id"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"string"}),"\n",(0,r.jsx)(n.strong,{children:"Pattern:"})," ",(0,r.jsx)(n.code,{children:"^[a-zA-Z0-9_-]+$"}),"\n",(0,r.jsx)(n.strong,{children:"Error Code:"})," ",(0,r.jsx)(n.code,{children:"E_UNKNOWN_TRACKING_ID"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Valid Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{"tracking_id": "abc123"}\n{"tracking_id": "site-001"}\n{"tracking_id": "my_tracking_id"}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Invalid Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{"tracking_id": ""}          // Empty\n{"tracking_id": "abc 123"}   // Contains space\n{"tracking_id": "abc@123"}   // Contains special char\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"2-materials",children:"2. materials"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"array"})," of objects\n",(0,r.jsx)(n.strong,{children:"Min Items:"})," 1\n",(0,r.jsx)(n.strong,{children:"Allowed Values:"})," ",(0,r.jsx)(n.code,{children:"allpv"}),", ",(0,r.jsx)(n.code,{children:"gsc"}),"\n",(0,r.jsx)(n.strong,{children:"Error Code:"})," ",(0,r.jsx)(n.code,{children:"E_UNKNOWN_MATERIAL"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Valid Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "materials": [\n    {"name": "allpv"}\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "materials": [\n    {"name": "allpv"},\n    {"name": "gsc"}\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Invalid Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "materials": []  // Empty array\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "materials": [\n    {"name": "unknown"}  // Invalid material name\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "materials": [\n    {"name": "allpv", "as": "pv"}  // additionalProperties not allowed\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"3-time",children:"3. time"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"object"}),"\n",(0,r.jsx)(n.strong,{children:"Required Fields:"})," ",(0,r.jsx)(n.code,{children:"start"}),", ",(0,r.jsx)(n.code,{children:"end"}),", ",(0,r.jsx)(n.code,{children:"tz"}),"\n",(0,r.jsx)(n.strong,{children:"Error Code:"})," ",(0,r.jsx)(n.code,{children:"E_TIME_REQUIRED"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Valid Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "time": {\n    "start": "2025-10-01T00:00:00",\n    "end": "2025-10-20T00:00:00",\n    "tz": "Asia/Tokyo"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Timezone (",(0,r.jsx)(n.code,{children:"tz"}),"):"]})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," String"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Format:"})," IANA timezone identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Any valid IANA timezone is accepted"})," (see ",(0,r.jsx)(n.a,{href:"https://www.iana.org/time-zones",children:"IANA Time Zone Database"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Common examples:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Asia/Tokyo"})," - Japan Standard Time"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"UTC"})," - Coordinated Universal Time"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Europe/London"})," - UK"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"America/New_York"})," - US Eastern"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"America/Los_Angeles"})," - US Pacific"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Europe/Paris"})," - Central European Time"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Australia/Sydney"})," - Australian Eastern Time"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Invalid Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "time": {\n    "start": "2025-10-01",  // Missing time component\n    "end": "2025-10-20T00:00:00",\n    "tz": "Asia/Tokyo"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "time": {\n    "start": "2025-10-01T00:00:00",\n    "end": "2025-10-20T00:00:00",\n    "tz": "JST"  // Use IANA format like "Asia/Tokyo", not abbreviations\n  }\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "time": {\n    "start": "2025-10-01T00:00:00",\n    "end": "2025-10-20T00:00:00",\n    "tz": "Tokyo"  // Must use full IANA identifier "Asia/Tokyo"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"4-make",children:"4. make"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"object"}),"\n",(0,r.jsx)(n.strong,{children:"Pattern:"})," View names must match ",(0,r.jsx)(n.code,{children:"^[a-zA-Z0-9_]+$"}),"\n",(0,r.jsx)(n.strong,{children:"Error Code:"})," ",(0,r.jsx)(n.code,{children:"E_UNKNOWN_COLUMN"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Structure:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Each view must have ",(0,r.jsx)(n.code,{children:"from"})," (array with exactly 1 material)"]}),"\n",(0,r.jsxs)(n.li,{children:["Each view must have ",(0,r.jsx)(n.code,{children:"keep"})," (array with at least 1 column)"]}),"\n",(0,r.jsxs)(n.li,{children:["Column names must match ",(0,r.jsx)(n.code,{children:"^(allpv|gsc)\\.[a-zA-Z0-9_]+$"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Valid Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "make": {\n    "page_views": {\n      "from": ["allpv"],\n      "keep": [\n        "allpv.url",\n        "allpv.title",\n        "allpv.access_time"\n      ]\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Invalid Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "make": {\n    "page_views": {\n      "from": ["allpv", "gsc"],  // More than 1 item\n      "keep": ["allpv.url"]\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "make": {\n    "page_views": {\n      "from": ["allpv"],\n      "keep": ["url"]  // Not fully qualified\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "make": {\n    "page_views": {\n      "from": ["allpv"],\n      "keep": []  // Empty keep array\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"5-result",children:"5. result"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"object"}),"\n",(0,r.jsx)(n.strong,{children:"Required:"})," ",(0,r.jsx)(n.code,{children:"use"}),"\n",(0,r.jsx)(n.strong,{children:"Optional:"})," ",(0,r.jsx)(n.code,{children:"limit"})," (1-50000, default: 1000), ",(0,r.jsx)(n.code,{children:"count_only"})," (boolean, default: false)\n",(0,r.jsx)(n.strong,{children:"Error Code:"})," ",(0,r.jsx)(n.code,{children:"E_UNKNOWN_VIEW"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Valid Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "result": {\n    "use": "page_views"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "result": {\n    "use": "page_views",\n    "limit": 100,\n    "count_only": false\n  }\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "result": {\n    "use": "page_views",\n    "count_only": true\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Invalid Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "result": {\n    "use": "nonexistent_view"  // View not defined in make\n  }\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "result": {\n    "use": "page_views",\n    "limit": 100000  // Exceeds maximum of 50000\n  }\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "result": {\n    "use": "page_views",\n    "limit": 0  // Below minimum\n  }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"error-codes-reference",children:"Error Codes Reference"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Error Code"}),(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Cause"}),(0,r.jsx)(n.th,{children:"Solution"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"E_UNKNOWN_TRACKING_ID"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"tracking_id"})}),(0,r.jsx)(n.td,{children:"Invalid or missing tracking_id"}),(0,r.jsxs)(n.td,{children:["Use tracking_id from ",(0,r.jsx)(n.code,{children:"/guide"})," endpoint"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"E_UNKNOWN_MATERIAL"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"materials"})}),(0,r.jsx)(n.td,{children:"Invalid material name"}),(0,r.jsxs)(n.td,{children:["Use only ",(0,r.jsx)(n.code,{children:"allpv"})," or ",(0,r.jsx)(n.code,{children:"gsc"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"E_TIME_REQUIRED"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"time"})}),(0,r.jsx)(n.td,{children:"Missing start, end, or tz"}),(0,r.jsx)(n.td,{children:"Include all three fields"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"E_UNKNOWN_COLUMN"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"make.*.keep"})}),(0,r.jsx)(n.td,{children:"Invalid column name"}),(0,r.jsx)(n.td,{children:"Use fully qualified names (material.column)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"E_UNKNOWN_VIEW"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"result.use"})}),(0,r.jsx)(n.td,{children:"View name doesn't exist in make"}),(0,r.jsx)(n.td,{children:"Reference a view defined in make"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"E_FEATURE_NOT_SUPPORTED"})}),(0,r.jsx)(n.td,{children:"Various"}),(0,r.jsx)(n.td,{children:"Used disabled feature"}),(0,r.jsx)(n.td,{children:"Remove filter, join, calc, or sort"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"design-principles",children:"Design Principles"}),"\n",(0,r.jsx)(n.h3,{id:"1-single-source-of-truth",children:"1. Single Source of Truth"}),"\n",(0,r.jsx)(n.p,{children:"Both the PHP executor and AI models read the same schema definition. This ensures consistency between validation and generation."}),"\n",(0,r.jsx)(n.h3,{id:"2-frictionless-versioning",children:"2. Frictionless Versioning"}),"\n",(0,r.jsx)(n.p,{children:"Each version gets its own manifest file:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"/docs/developer-manual/api/2025-10-20/qal-validation.md"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"/docs/developer-manual/api/2025-11-01/qal-validation.md"})}),"\n",(0,r.jsx)(n.li,{children:"etc."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-double-yaml-format",children:"3. Double YAML Format"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Frontmatter YAML:"})," Parsed by PHP ",(0,r.jsx)(n.code,{children:"yaml_parse_file()"})," or Symfony YAML component\n",(0,r.jsx)(n.strong,{children:"Body YAML:"})," Readable by AI models via HTTP fetch or markdown context"]}),"\n",(0,r.jsx)(n.p,{children:"Both sections are identical and serve different consumers."}),"\n",(0,r.jsx)(n.h3,{id:"4-ai-friendly-structure",children:"4. AI-Friendly Structure"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Flat, explicit rules"}),"\n",(0,r.jsx)(n.li,{children:"No cross-references"}),"\n",(0,r.jsx)(n.li,{children:"Clear error codes"}),"\n",(0,r.jsx)(n.li,{children:"Enum values explicitly listed"}),"\n",(0,r.jsx)(n.li,{children:"Pattern validation with regex"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"php-integration-example",children:"PHP Integration Example"}),"\n",(0,r.jsx)(n.h3,{id:"method-1-parse-frontmatter-only",children:"Method 1: Parse Frontmatter Only"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"<?php\n// Using symfony/yaml\nuse Symfony\\Component\\Yaml\\Yaml;\n\n$content = file_get_contents('/path/to/qal-validation.md');\npreg_match('/^---\\n(.*?)\\n---/s', $content, $matches);\n$manifest = Yaml::parse($matches[1]);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"method-2-parse-body-yaml-block",children:"Method 2: Parse Body YAML Block"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"<?php\n$content = file_get_contents('/path/to/qal-validation.md');\npreg_match('/```yaml\\n(.*?)\\n```/s', $content, $matches);\n$manifest = Yaml::parse($matches[1]);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"validation-function",children:"Validation Function"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"<?php\nclass QAL_Executor {\n    public static function qal_validate_by_manifest($qal_json, $manifest) {\n        $errors = [];\n\n        // 1. Check required structure\n        foreach ($manifest['structure']['required'] as $field) {\n            if (!isset($qal_json[$field])) {\n                $errors[] = \"Missing required field: $field\";\n            }\n        }\n\n        // 2. Validate tracking_id\n        if (isset($qal_json['tracking_id'])) {\n            $pattern = $manifest['rules']['tracking_id']['pattern'];\n            if (!preg_match(\"/$pattern/\", $qal_json['tracking_id'])) {\n                $errors[] = $manifest['rules']['tracking_id']['errors'][0]['message'];\n            }\n        }\n\n        // 3. Validate materials\n        if (isset($qal_json['materials'])) {\n            $allowed = $manifest['rules']['materials']['items']['properties']['name']['enum'];\n            foreach ($qal_json['materials'] as $material) {\n                if (!in_array($material['name'], $allowed)) {\n                    $errors[] = $manifest['rules']['materials']['errors'][0]['message'];\n                }\n            }\n        }\n\n        // ... more validation steps\n\n        return [\n            'valid' => empty($errors),\n            'errors' => $errors\n        ];\n    }\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"complete-validation-example",children:"Complete Validation Example"}),"\n",(0,r.jsx)(n.h3,{id:"valid-qal-json",children:"Valid QAL JSON"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "tracking_id": "abc123",\n  "materials": [\n    {"name": "allpv"}\n  ],\n  "time": {\n    "start": "2025-10-01T00:00:00",\n    "end": "2025-10-20T00:00:00",\n    "tz": "Asia/Tokyo"\n  },\n  "make": {\n    "page_views": {\n      "from": ["allpv"],\n      "keep": [\n        "allpv.url",\n        "allpv.title",\n        "allpv.access_time"\n      ]\n    }\n  },\n  "result": {\n    "use": "page_views",\n    "limit": 100\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Validation Result:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"[\n  'valid' => true,\n  'errors' => []\n]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"invalid-qal-json",children:"Invalid QAL JSON"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "tracking_id": "abc123",\n  "materials": [\n    {"name": "unknown_material"}\n  ],\n  "time": {\n    "start": "2025-10-01T00:00:00",\n    "end": "2025-10-20T00:00:00",\n    "tz": "Invalid/Timezone"\n  },\n  "make": {\n    "page_views": {\n      "from": ["allpv"],\n      "keep": ["url"]\n    }\n  },\n  "result": {\n    "use": "nonexistent_view",\n    "limit": 10000\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Validation Result:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"[\n  'valid' => false,\n  'errors' => [\n    'Material name not found in manifest.',\n    'Invalid timezone: Invalid/Timezone',\n    'Invalid column name in keep list.',\n    'Result.use does not match any defined view in make.',\n    'Limit exceeds maximum of 50000.'\n  ]\n]\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"future-extensions",children:"Future Extensions"}),"\n",(0,r.jsx)(n.p,{children:"As QAL evolves, this manifest will be updated to support:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filter"})," rules and validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"join"})," structure validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"calc"})," aggregation rules"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sort"})," specification validation"]}),"\n",(0,r.jsx)(n.li,{children:"Additional materials"}),"\n",(0,r.jsx)(n.li,{children:"New timezones"}),"\n",(0,r.jsx)(n.li,{children:"Custom column patterns"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Each new version will get its own dated manifest file."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/ja/docs/developer-manual/api/2025-10-20/qal-2025-10-20",children:"QAL Guide"})})," - Learn how to write QAL queries"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/ja/docs/developer-manual/api/2025-10-20/materials-2025-10-20",children:"Materials Reference"})})," - Available columns and data types"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/ja/docs/developer-manual/api/2025-10-20/endpoints-2025-10-20",children:"Endpoints"})})," - API endpoint specifications"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/ja/docs/developer-manual/api/2025-10-20/",children:"API Overview"})})," - Return to API documentation home"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"why-this-format",children:"Why This Format?"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Target"}),(0,r.jsx)(n.th,{children:"Reads Which Part"}),(0,r.jsx)(n.th,{children:"How"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"PHP Executor"})}),(0,r.jsx)(n.td,{children:"Frontmatter YAML"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"yaml_parse_file()"})," or ",(0,r.jsx)(n.code,{children:"Symfony\\Yaml::parseFile()"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"AI Models"})}),(0,r.jsx)(n.td,{children:"Body YAML block"}),(0,r.jsx)(n.td,{children:"Via HTTP fetch or markdown context"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Humans"})}),(0,r.jsx)(n.td,{children:"Entire markdown"}),(0,r.jsx)(n.td,{children:"Rendered by Docusaurus"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Docusaurus"})}),(0,r.jsx)(n.td,{children:"Frontmatter"}),(0,r.jsx)(n.td,{children:"For metadata and navigation"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"This format serves all consumers with a single file, ensuring consistency and reducing maintenance burden."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Last Updated:"})," 2025-10-20\n",(0,r.jsx)(n.strong,{children:"Version:"})," 2025-10-20\n",(0,r.jsx)(n.strong,{children:"Manifest ID:"})," qal-validation-2025-10-20"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var s=i(6540);const r={},a=s.createContext(r);function t(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);